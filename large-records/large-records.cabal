cabal-version:      2.4
name:               large-records
version:            0.1.0.0
synopsis:           Efficient compilation for large records, linear in the size of the record
description:        For many reasons, the internal code generated for modules
                    that contain records is quadratic in the number of record
                    fields. For large records (more than 30 fields, say), this
                    can become problematic, leading to large compilation times
                    and high memory requirements for ghc. The large-records
                    library provides a way to define records that is guaranteed
                    to result in ghc core that is /linear/ in the number of
                    record fields.
bug-reports:        https://github.com/well-typed/large-records/issues
license:            BSD-3-Clause
author:             Edsko de Vries
maintainer:         edsko@well-typed.com
category:           Generics
extra-source-files: CHANGELOG.md
tested-with:        GHC ==8.8.4 || ==8.10.7 || ==9.0.1
                    -- TODO ^^^^^ Move to 9.0.2?

source-repository head
  type:     git
  location: https://github.com/well-typed/large-records

library
    exposed-modules:

--        Data.Record.TH
--        Data.Record.TH.CodeGen
--        Data.Record.TH.CodeGen.Tree
--        Data.Record.TH.Config.Options
        Data.Record.TH.Runtime
--
--        Data.Record.Internal.CodeGen
--        Data.Record.Internal.Naming
--        Data.Record.Internal.Record
--        Data.Record.Internal.Record.Parser
--        Data.Record.Internal.TH.Compat
--        Data.Record.Internal.TH.Name
--        Data.Record.Internal.TH.Util
--        Data.Record.Internal.Util

    build-depends:
        base             >= 4.13   && < 4.17
--      , containers       >= 0.6.2  && < 0.7
--      , mtl              >= 2.2.1  && < 2.3
--      , record-hasfield  >= 1.0    && < 1.1
--      , syb              >= 0.7    && < 0.8
      , vector           >= 0.12   && < 0.13
      , large-generics   >= 0.1    && < 0.2
--
--        -- whatever version is bundled with ghc
--      , template-haskell
    hs-source-dirs:
        src
    default-language:
        Haskell2010
    default-extensions:
        NoStarIsType
    ghc-options:
        -Wall
        -Wcompat
        -Wincomplete-uni-patterns
        -Wincomplete-record-updates
        -Wpartial-fields
        -Widentities
        -Wredundant-constraints
        -Wmissing-export-lists

test-suite test-large-records
    type:
        exitcode-stdio-1.0
    main-is:
        TestLargeRecords.hs
    other-modules:
        Test.Record.Sanity.CodeGen
--         Test.Record.Sanity.Derive
--         Test.Record.Sanity.EqualFieldTypes
--         Test.Record.Sanity.HigherKinded
--         Test.Record.Sanity.HKD
--         Test.Record.Sanity.OverloadingNoDRF
--         Test.Record.Sanity.PatternMatch
--         Test.Record.Sanity.QualifiedImports
--         Test.Record.Sanity.QualifiedImports.A
--         Test.Record.Sanity.QualifiedImports.B
--         Test.Record.Sanity.RDP
--         Test.Record.Sanity.RecordConstruction
--         Test.Record.Sanity.Strictness
--         Test.Record.Util

    build-depends:
        base
      , large-records

      , large-generics
      , mtl
      , newtype
      , record-hasfield
      , tasty
      , tasty-hunit
      , template-haskell
      , transformers
    hs-source-dirs:
        test
    default-language:
        Haskell2010
    ghc-options:
        -Wall
        -Wcompat
        -Wincomplete-uni-patterns
        -Wincomplete-record-updates
        -Wpartial-fields
        -Widentities
